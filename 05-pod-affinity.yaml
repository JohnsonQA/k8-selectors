#Pod-affinity means both pods would be in the same node
#Real use case redis or any caching mechanism. IF both pods are in same node then caching is more feasible
# Performance of application retrieving data is faster
apiVersion: v1
kind: Pod
metadata:
  name: pod-1
  labels:
    app-name: pod-1
    purpose: pod-affinity
spec:
  containers:
  - name: pod-1
    image: nginx
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-2
  labels:
    app-name: pod-2
    purpose: pod-affinity
spec:
  affinity:
    podAffinity:
      # requiredDuringSchedulingIgnoredDuringExecution:
      # - labelSelector:
      #     matchExpressions:
      #     - key: app-nameee
      #       operator: In
      #       values:
      #       - pod-1
      #   topologyKey: "kubernetes.io/hostname"
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app-nameee
              operator: In
              values:
              - pod-1
          topologyKey: "kubernetes.io/hostname"
  containers:
  - name: pod-2
    image: nginx